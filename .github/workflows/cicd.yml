name: CI/CD Bash Script

on:
  push:
    paths:
        - '**/*.sh'

jobs:
  run-bash-script:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

If the execute permission is not set on your script (find_transcript_ids.sh), the GitHub Actions runner won't be able to execute it, leading to a failure in your workflow. You can resolve this issue by ensuring that the script has the appropriate execute permissions set in your repository. Here's how you can do it:

Setting Execute Permission Locally
Set Execute Permission: Open a terminal on your local machine, navigate to the directory containing your script, and run the following command to add execute permission to the script:

bash
Copy code
chmod +x find_transcript_ids.sh
Verify Permission: You can verify that the execute permission has been set by listing the file's permissions:

bash
Copy code
ls -l find_transcript_ids.sh
You should see something like -rwxr-xr-x at the beginning of the line, indicating that the file is executable.

Commit and Push: After setting the execute permission, you need to commit this change and push it to your repository:

bash
Copy code
git add find_transcript_ids.sh
git commit -m "Set execute permission on find_transcript_ids.sh"
git push
Setting Execute Permission in Workflow
If for some reason you cannot set the execute permission locally and commit the change, you can add a step in your GitHub Actions workflow to set the execute permission before trying to run the script:

yaml
Copy code
jobs:
  run-bash-script:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set execute permission on script
      run: chmod +x ./find_transcript_ids.sh
    - name: Run / Test script
      run: |
        ./find_transcript_ids.sh --TEST